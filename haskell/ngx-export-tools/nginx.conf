# this nginx configuration file is for demonstration purpose only

user                    nobody;
worker_processes        2;

events {
    worker_connections  1024;
}

http {
    default_type        application/octet-stream;
    sendfile            on;

    haskell compile threaded modular /tmp/ngx_haskell_test_tools.hs '

{-# LANGUAGE TemplateHaskell, DeriveGeneric #-}

module Test where

import NgxExport
import NgxExport.Tools

import           Data.ByteString (ByteString)
import qualified Data.ByteString.Lazy as L
import qualified Data.ByteString.Lazy.Char8 as C8L
import           Data.Aeson
import           GHC.Generics

test :: ByteString -> Bool -> IO L.ByteString
test = const . return . L.fromStrict
ngxExportSimpleService \'test $ Just $ Sec 10

newtype ConfRead = ConfRead Int deriving (Read, Show)

testRead :: ConfRead -> Bool -> IO L.ByteString
testRead c = const $ return $ C8L.pack $ show c
ngxExportSimpleServiceTyped \'testRead \'\'ConfRead $ Just $ Sec 10

data ConfReadJSON = ConfReadJSONCon1 Int
                  | ConfReadJSONCon2 deriving (Generic, Show)
instance FromJSON ConfReadJSON

testReadJSON :: ConfReadJSON -> Bool -> IO L.ByteString
testReadJSON c = const $ return $ C8L.pack $ show c
ngxExportSimpleServiceTypedAsJSON \'testReadJSON \'\'ConfReadJSON $
    Just $ Sec 10

    ';

    haskell_run_service simpleService_test $hs_test
            test;

    haskell_run_service simpleService_testRead $hs_testRead
            'ConfRead 20';

    haskell_run_service simpleService_testReadJSON $hs_testReadJSON
            '{"tag":"ConfReadJSONCon1", "contents":56}';

    server {
        listen       8010;
        server_name  main;
        error_log    /tmp/nginx-test-haskell-error.log;
        access_log   /tmp/nginx-test-haskell-access.log;

        location / {
            echo "Service variables:";
            echo "hs_test: $hs_test";
            echo "hs_testRead: $hs_testRead";
            echo "hs_testReadJSON: $hs_testReadJSON";
        }
    }
}

# vim: ft=nginx
