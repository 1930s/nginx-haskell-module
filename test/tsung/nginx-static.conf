# this nginx configuration file is for demonstration purpose only

user                    nobody;
worker_processes        2;

events {
    worker_connections  1024;
}

http {
    default_type        application/octet-stream;
    sendfile            on;

    haskell compile /tmp/ngx_haskell.hs '

{-# LANGUAGE MagicHash, ViewPatterns #-}

module NgxHaskellUserRuntime where

import           NgxExport
import           Data.FileEmbed
import qualified Data.ByteString.Char8 as C8
import           Data.ByteString.Unsafe
import           Data.ByteString.Internal (accursedUnutterablePerformIO)
import           Safe

fromFile (tailSafe . C8.unpack -> f) =
    case lookup f $(embedDir "/usr/local/webdata") of
        Just p  -> (p,                                text_plain, 200)
        Nothing -> (packLiteral 14 "File not found"#, text_plain, 404)
    where packLiteral l s =
              accursedUnutterablePerformIO $ unsafePackAddressLen l s
          text_plain = packLiteral 10 "text/plain"#
ngxExportUnsafeHandler \'fromFile

fromFile1Byte = const $ fromFile $ C8.pack "/static/content-1byte.txt"
ngxExportUnsafeHandler \'fromFile1Byte

    ';

    server {
        listen       8010;
        server_name  main;
        error_log    /tmp/nginx-test-haskell-error.log;
        access_log   /tmp/nginx-test-haskell-access.log;

        location /static {
            haskell_unsafe_content fromFile $uri;
        }

        location /static1byte {
            haskell_unsafe_content fromFile1Byte;
        }
    }
}

# vim: ft=nginx
